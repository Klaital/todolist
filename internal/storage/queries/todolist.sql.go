// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: todolist.sql

package queries

import (
	"context"
)

const addToList = `-- name: AddToList :one
INSERT INTO list_items (todolist_id, descr)
VALUES ($1, $2)
RETURNING id
`

type AddToListParams struct {
	TodolistID int32
	Descr      string
}

func (q *Queries) AddToList(ctx context.Context, arg AddToListParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, addToList, arg.TodolistID, arg.Descr)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const createList = `-- name: CreateList :one
INSERT INTO todolists (owner_id, name)
VALUES ($1, $2)
RETURNING id
`

type CreateListParams struct {
	OwnerID int32
	Name    string
}

func (q *Queries) CreateList(ctx context.Context, arg CreateListParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, createList, arg.OwnerID, arg.Name)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const deleteListItem = `-- name: DeleteListItem :exec
DELETE FROM list_items WHERE id=$1
`

func (q *Queries) DeleteListItem(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteListItem, id)
	return err
}

const updateStatus = `-- name: UpdateStatus :exec
UPDATE list_items SET status=$2 WHERE id=$1
`

type UpdateStatusParams struct {
	ID     int64
	Status int32
}

func (q *Queries) UpdateStatus(ctx context.Context, arg UpdateStatusParams) error {
	_, err := q.db.ExecContext(ctx, updateStatus, arg.ID, arg.Status)
	return err
}
